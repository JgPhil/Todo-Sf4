<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Task.php" path="/Entity">
    <totals>
      <lines total="127" comments="28" code="99" executable="22" executed="19" percent="86.36"/>
      <methods count="14" tested="12" percent="85.71"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Entity\Task" start="14" executable="22" executed="19" crap="17.73">
      <package full="" name="" sub="" category=""/>
      <namespace name="App\Entity"/>
      <method name="__construct" signature="__construct()" start="51" end="55" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="getId" signature="getId()" start="57" end="60" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getCreatedAt" signature="getCreatedAt()" start="62" end="65" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setCreatedAt" signature="setCreatedAt($createdAt)" start="67" end="70" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getTitle" signature="getTitle()" start="72" end="75" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setTitle" signature="setTitle($title)" start="77" end="80" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getContent" signature="getContent()" start="82" end="85" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setContent" signature="setContent($content)" start="87" end="90" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="isDone" signature="isDone()" start="92" end="95" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="toggle" signature="toggle($flag)" start="97" end="100" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getUser" signature="getUser(): ?User" start="102" end="105" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="setUser" signature="setUser(?User $user): self" start="107" end="112" crap="2" executable="2" executed="2" coverage="100"/>
      <method name="getIsDone" signature="getIsDone(): ?bool" start="114" end="117" crap="6.00" executable="1" executed="0" coverage="0"/>
      <method name="setIsDone" signature="setIsDone(bool $isDone): self" start="119" end="124" crap="2.00" executable="2" executed="0" coverage="0"/>
    </class>
    <coverage>
      <line nr="53">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testCreatedAt"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testTitle"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testContent"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testIsDone"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="54">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testCreatedAt"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testTitle"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testContent"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testIsDone"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="55">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testCreatedAt"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testTitle"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testContent"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testIsDone"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="59">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
      </line>
      <line nr="64">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testCreatedAt"/>
      </line>
      <line nr="69">
        <covered by="App\Tests\Unit\Entity\TaskTest::testCreatedAt"/>
      </line>
      <line nr="70">
        <covered by="App\Tests\Unit\Entity\TaskTest::testCreatedAt"/>
      </line>
      <line nr="74">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testTitle"/>
      </line>
      <line nr="79">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testTitle"/>
      </line>
      <line nr="80">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testTitle"/>
      </line>
      <line nr="84">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testContent"/>
      </line>
      <line nr="89">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testContent"/>
      </line>
      <line nr="90">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testContent"/>
      </line>
      <line nr="94">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testIsDone"/>
      </line>
      <line nr="99">
        <covered by="App\Tests\Unit\Entity\TaskTest::testIsDone"/>
      </line>
      <line nr="100">
        <covered by="App\Tests\Unit\Entity\TaskTest::testIsDone"/>
      </line>
      <line nr="104">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="109">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="111">
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ORM</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Mapping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ORM</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Bridge</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UniqueEntity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @ORM\Entity(repositoryClass="App\Repository\TaskRepository")</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * @ORM\Table</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @UniqueEntity("title")</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Task</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="integer")</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * @ORM\Id</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * @ORM\GeneratedValue(strategy="AUTO")</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="datetime")</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$createdAt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string")</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir un titre.")</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$title</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="text")</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir du contenu.")</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="boolean")</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isDone</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * @ORM\ManyToOne(targetEntity=User::class, inversedBy="tasks", cascade={"persist"})</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * @ORM\JoinColumn(nullable=true)</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createdAt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Datetime</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isDone</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCreatedAt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createdAt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setCreatedAt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$createdAt</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createdAt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$createdAt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="71"/>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTitle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">title</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="76"/>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setTitle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$title</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">title</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$title</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="81"/>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="86"/>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">content</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isDone</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isDone</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="96"/>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">toggle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$flag</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isDone</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$flag</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="101"/>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">User</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106"/>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110"/>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getIsDone</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isDone</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="118"/>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setIsDone</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isDone</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isDone</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isDone</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122"/>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="127">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128"/>
    </source>
  </file>
</phpunit>
