<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="User.php" path="/Entity">
    <totals>
      <lines total="158" comments="34" code="124" executable="29" executed="28" percent="96.55"/>
      <methods count="17" tested="16" percent="94.12"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Entity\User" start="17" executable="29" executed="28" crap="20">
      <package full="" name="" sub="" category=""/>
      <namespace name="App\Entity"/>
      <method name="__construct" signature="__construct()" start="55" end="58" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getId" signature="getId()" start="60" end="63" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getUsername" signature="getUsername()" start="65" end="68" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setUsername" signature="setUsername($username)" start="70" end="73" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getSalt" signature="getSalt()" start="75" end="78" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getPassword" signature="getPassword()" start="80" end="83" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setPassword" signature="setPassword($password)" start="85" end="88" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getEmail" signature="getEmail()" start="90" end="93" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setEmail" signature="setEmail($email)" start="95" end="98" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getRoles" signature="getRoles(): array" start="100" end="103" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getRole" signature="getRole()" start="105" end="108" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setRole" signature="setRole($role)" start="110" end="115" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="isAdmin" signature="isAdmin()" start="117" end="120" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="eraseCredentials" signature="eraseCredentials()" start="122" end="124" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="getTasks" signature="getTasks(): Collection" start="129" end="132" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="addTask" signature="addTask(Task $task): self" start="134" end="142" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="removeTask" signature="removeTask(Task $task): self" start="144" end="155" crap="3" executable="5" executed="5" coverage="100"/>
    </class>
    <coverage>
      <line nr="57">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageAnonymous"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUsername"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEncodePassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testPassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEmail"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRole"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="58">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageAnonymous"/>
        <covered by="App\Tests\Unit\Entity\TaskTest::testUser"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUsername"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEncodePassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testPassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEmail"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRole"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="62">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
      </line>
      <line nr="67">
        <covered by="App\Tests\Functional\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Controller\HomeControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageAnonymous"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUsername"/>
      </line>
      <line nr="72">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUsername"/>
      </line>
      <line nr="73">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUsername"/>
      </line>
      <line nr="77">
        <covered by="App\Tests\Functional\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Controller\HomeControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEncodePassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testPassword"/>
      </line>
      <line nr="82">
        <covered by="App\Tests\Functional\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Controller\HomeControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageAnonymous"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEncodePassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testPassword"/>
      </line>
      <line nr="87">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEncodePassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testPassword"/>
      </line>
      <line nr="88">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEncodePassword"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testPassword"/>
      </line>
      <line nr="92">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageAnonymous"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEmail"/>
      </line>
      <line nr="97">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEmail"/>
      </line>
      <line nr="98">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testEmail"/>
      </line>
      <line nr="102">
        <covered by="App\Tests\Functional\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Controller\HomeControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
      </line>
      <line nr="107">
        <covered by="App\Tests\Functional\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testcreateTaskAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditTaskRedirection"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testDeleteTaskButton"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListNotDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testListDoneTasksAction"/>
        <covered by="App\Tests\Functional\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Controller\HomeControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\TaskControllerTest::testAccessTaskListPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageLogged"/>
        <covered by="App\Tests\Unit\Controller\UserControllerTest::testAccessCreateActionPageAnonymous"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRole"/>
      </line>
      <line nr="112">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRole"/>
      </line>
      <line nr="114">
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testCreateUserAction"/>
        <covered by="App\Tests\Functional\Controller\UserControllerTest::testEditUserAction"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRole"/>
      </line>
      <line nr="119">
        <covered by="App\Tests\Unit\Entity\UserTest::testRole"/>
      </line>
      <line nr="131">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="136">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="137">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="138">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="141">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="146">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="147">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="149">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="150">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
      <line nr="154">
        <covered by="App\Tests\Unit\Entity\UserTest::testAddAndRemoveTask"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Common</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Collections</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ArrayCollection</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Common</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Collections</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Collection</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ORM</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Mapping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ORM</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">User</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Bridge</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UniqueEntity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @ORM\Table("user")</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * @ORM\Entity(repositoryClass="App\Repository\UserRepository")</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> * @UniqueEntity("email")</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="17">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserInterface</token>
      </line>
      <line no="18">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="integer")</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @ORM\Id</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * @ORM\GeneratedValue(strategy="AUTO")</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=25, unique=true)</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir un nom d'utilisateur.")</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=64)</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=60, unique=true)</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir une adresse email.")</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     * @Assert\Email(message="Le format de l'adresse n'est pas correcte.")</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @ORM\OneToMany(targetEntity=Task::class, mappedBy="user", orphanRemoval=true)</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tasks</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string")</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayCollection</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSalt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="79"/>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="84"/>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">role</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="104"/>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109"/>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$role</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">role</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116"/>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_ADMIN'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="121"/>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">eraseCredentials</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="127">
        <token name="T_DOC_COMMENT">     * @return Collection|Task[]</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTasks</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Collection</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="133"/>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addTask</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Task</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">contains</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140"/>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="143"/>
      <line no="144">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">removeTask</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Task</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">contains</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">removeElement</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// set the owning side to null (unless already changed)</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="153"/>
      <line no="154">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="156"/>
      <line no="157">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="158">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="159"/>
    </source>
  </file>
</phpunit>
